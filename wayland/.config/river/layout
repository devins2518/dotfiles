#!/usr/bin/env bash

# Nested layouts (examples)

# Horizontal split layout with stacking on the last area
read -r -d '' HORIZONTAL << EOM
(
  { hor:
    ver
    (
      { ver: full deck }
      1 0.5
    )
  } 1 0.63
)
EOM

# The classic centered master layout
# https://media.discordapp.net/attachments/769673106842845194/780095998239834142/unknown.png
# Bran - BlingCorp
read -r -d '' CENTERED << EOM
(
  { ver:
    hor $HORIZONTAL hor
  } 1 0.5 1
)
EOM

# A partial implementation of the dwindle layout
# After 3 splits windows are stacked
read -r -d '' DWINDLE << EOM
(
  { ver: 
    hor $HORIZONTAL
  } 1 0.55
)
EOM

# A layout meant for grouping a shit ton of windows
read -r -d '' GROUP << EOM
(
  { ver:
    { hor: deck deck }
    $HORIZONTAL 
    { hor: deck deck }
  } 1 0.45 1
)
EOM

# Looks like the ordinary master and stack layout when main_count is one
# but when increased, the additional windows in the main area will be 
# vertically aligned below the main window.
read -r -d '' STACK << EOM
(
  { ver:
    (
      { hor: full ver }
      1 0.6 0
    )
    hor
  } 1 0.65 0
)
EOM

# Like STACK except the main and slave areas are inverted
read -r -d '' RSTACK << EOM
(
  { ver:
    hor
    (
      { hor: full ver }
      1 0.60 0
    )
  } 1 0.65 1
)
EOM

# Splits the output area vertically in 2 areas.
# The main area has a count of one and a horizontal layout.
# Below the the top window in the slave area windows are stacked on
# top of each others like a deck of cards.
# Inspired by Stacktile - https://git.sr.ht/~leon_plickat/stacktile
read -r -d '' DECK << EOM
(
  { ver:
    hor
    (
      { hor: full deck }
      1 0.65 0
    )
  } 1 0.65 0
)
EOM

# Like DECK except the main and slave areas are inverted
read -r -d '' RDECK << EOM
(
  { ver:
    (
      { hor: full deck }
      1 0.65 0
    )
    hor
  } 1 0.65 1
)
EOM
