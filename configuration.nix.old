# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).
{ config, lib, pkgs, ... }:

{
  imports = [ # Include the results of the hardware scan.
    <nixos-hardware/microsoft/surface>
    ./hardware-configuration.nix
  ];

  # Use the GRUB boot loader.
  boot = {
    loader = {
      efi = {
        canTouchEfiVariables = true;
        efiSysMountPoint = "/boot"; # ← use the same mount point here.
      };
      grub = {
        devices = [ "nodev" ];
        enable = true;
        version = 2;
        # Doesn't work?
        # fontSize = 16;
        efiSupport = true;
        extraEntries = ''
          menuentry "Windows" {
            insmod part_gpt
            insmod fat
            insmod search_fs_uuid
            insmod chain
            search --fs-uuid --set=root 3087-B4EC
            chainloader /EFI/Microsoft/Boot/bootmgfw.efi
          }
        '';
      };
    };
  };

  networking = {
    hostName = "nixos"; # Define your hostname.
    networkmanager = {
      enable = true; # Enables wireless support via Network Manager
      wifi.powersave = false;
    };
  };

  # Set your time zone.
  time.timeZone = "America/Chicago";

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  networking.useDHCP = false;
  networking.interfaces.wlp2s0.useDHCP = true;

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";
  # console = {
  #   font = "Lat2-Terminus16";
  #   keyMap = "us";
  # };

  # Enable the X11 windowing system.
  services.xserver = {
    enable = true;
    # Doesn't work?
    # wacom.enable = true;
    videoDrivers = [ "intel" ];
    #Option "DRI" "2"
    deviceSection = ''
      Option "TearFree" "true"
    '';
    dpi = 192;

    displayManager = {
      lightdm = {
        enable = true;

        background = "/etc/nixos/spaceman.png";

        greeters.gtk = {
          enable = true;

          #cursorTheme = {
          #package = pkgs.capitaine-cursors;
          #name = "Capitaine";
          #size = 32;
          #};

          theme = {
            package = pkgs.sierra-gtk-theme;
            name = "Sierra-dark";
          };

          indicators = [
            "~spacer"
            "~clock"
            "~spacer"
            "~session"
            "~power"
          ];
        };
      };
    };

    windowManager = { bspwm.enable = true; };
    #desktopManager = { gnome.enable = true; };

    # Enable touchpad support (enabled default in most desktopManager).
    libinput = {
      enable = true;

      touchpad = {
        naturalScrolling = true;
        accelSpeed = "1.0";
        accelProfile = "flat";
        # Doesn't work?
        # calibrationMatrix = "1.6 0 0 0 1.6 0 0 0 1";
      };
    };

    layout = "us";
  };

  nix.maxJobs = 4;
  powerManagement = {
    enable = true;
    cpuFreqGovernor = "powersave";
    powertop.enable = true;
  };

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
  sound.enable = true;
  hardware = {
    pulseaudio.enable = true;
    acpilight.enable = true;
    video.hidpi.enable = true;
    cpu.intel.updateMicrocode = true;
    opengl = {
      enable = true;
      extraPackages = with pkgs; [
        intel-media-driver # LIBVA_DRIVER_NAME=iHD
        vaapiIntel # LIBVA_DRIVER_NAME=i965 (older but works better for Firefox/Chromium)
        vaapiVdpau
        libvdpau-va-gl
      ];
    };
  };

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users = {
    defaultUserShell = pkgs.zsh;
    users.devin = {
      isNormalUser = true;
      shell = pkgs.zsh;
      description = "Devin Singh";
      extraGroups = [ "wheel" "networkmanager" ]; # Enable ‘sudo’ for the user.
    };
  };

  security.sudo.wheelNeedsPassword = false; # wheel ALL=(ALL) NOPASSWD:ALL

  nixpkgs.config = { allowUnfree = true; };
  # List packages installed in system profile.
  environment.systemPackages = with pkgs; [
    alacritty
    firefox
    rustup
    discord
    nixfmt
    home-manager
    lm_sensors
    rofi
    pcmanfm
    xdotool
    polybar
    alttab
    feh
    gcc
    picom
    #gnomeExtensions.dash-to-dock
    dunst
    bottom
    go
    tokei
  ];

  environment.variables = {
    GDK_SCALE = "2";
    GDK_DPI_SCALE = "0.5";
    _JAVA_OPTIONS = "-Dsun.java2d.uiScale=2";
    # Doesn't work?
    #XCURSOR_SIZE = "48px";
  };

  programs.zsh = {
    enable = true;
    histSize = 2000;
    histFile = "$HOME/.zsh/HISTFILE";
  };

  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };

  fonts = {
    fontconfig.dpi = 192;

    fonts = with pkgs; [
      (nerdfonts.override { fonts = [ "FiraCode" "Iosevka" "JetBrainsMono" ]; })
      font-awesome
    ];
  };

  nix.gc = {
    automatic = true;
    dates = "weekly";
    options = "--delete-older-than 7d";
  };

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "20.09"; # Did you read the comment?
}

